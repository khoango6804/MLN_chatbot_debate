#!/bin/bash

echo "üéØ KI·ªÇM TRA T√åNH H√åNH EXTERNAL ACCESS CU·ªêI C√ôNG"
echo "==============================================="
echo ""

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

EXTERNAL_IP="206.189.40.105"
DOMAIN="mlndebate.io.vn"

echo "üìã TH√îNG TIN:"
echo "Server IP: $EXTERNAL_IP"
echo "Domain: $DOMAIN"
echo ""

echo "üß™ TESTING..."
echo ""

# Test HTTPS (most important)
HTTPS_CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://$DOMAIN/" 2>/dev/null)
if [ "$HTTPS_CODE" = "200" ]; then
    echo -e "${GREEN}‚úÖ HTTPS ACCESS: HO·∫†T ƒê·ªòNG HO√ÄN H·∫¢O ($HTTPS_CODE)${NC}"
    HTTPS_STATUS="SUCCESS"
else
    echo -e "${RED}‚ùå HTTPS ACCESS: C√ì V·∫§N ƒê·ªÄ ($HTTPS_CODE)${NC}"
    HTTPS_STATUS="FAILED"
fi

# Test HTTP
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "http://$EXTERNAL_IP/" 2>/dev/null)
if [ "$HTTP_CODE" = "301" ] || [ "$HTTP_CODE" = "302" ]; then
    echo -e "${GREEN}‚úÖ HTTP REDIRECT: HO·∫†T ƒê·ªòNG ($HTTP_CODE)${NC}"
    HTTP_STATUS="SUCCESS"
elif [ "$HTTP_CODE" = "200" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  HTTP: HO·∫†T ƒê·ªòNG NH∆ØNG KH√îNG REDIRECT ($HTTP_CODE)${NC}"
    HTTP_STATUS="PARTIAL"
else
    echo -e "${RED}‚ùå HTTP ACCESS: C√ì V·∫§N ƒê·ªÄ ($HTTP_CODE)${NC}"
    HTTP_STATUS="FAILED"
fi

# Test firewall
UFW_80=$(sudo ufw status 2>/dev/null | grep -c "80.*ALLOW")
UFW_443=$(sudo ufw status 2>/dev/null | grep -c "443.*ALLOW")

if [ "$UFW_80" -gt 0 ] && [ "$UFW_443" -gt 0 ]; then
    echo -e "${GREEN}‚úÖ FIREWALL: ƒê√É M·ªû PORT 80, 443${NC}"
    FIREWALL_STATUS="SUCCESS"
else
    echo -e "${RED}‚ùå FIREWALL: V·∫™N CH·∫∂N PORTS${NC}"
    FIREWALL_STATUS="FAILED"
fi

# Test services
BACKEND_RUNNING=$(ps aux | grep -c "uvicorn\|python.*main.py" | grep -v grep)
FRONTEND_RUNNING=$(ps aux | grep -c "node.*3001\|npm.*start" | grep -v grep)

if [ "$BACKEND_RUNNING" -gt 0 ] && [ "$FRONTEND_RUNNING" -gt 0 ]; then
    echo -e "${GREEN}‚úÖ SERVICES: BACKEND & FRONTEND ƒêANG CH·∫†Y${NC}"
    SERVICES_STATUS="SUCCESS"
else
    echo -e "${RED}‚ùå SERVICES: BACKEND HO·∫∂C FRONTEND KH√îNG CH·∫†Y${NC}"
    SERVICES_STATUS="FAILED"
fi

echo ""
echo "üéØ T√ìM T·∫ÆT T√åNH H√åNH:"
echo "===================="

if [ "$HTTPS_STATUS" = "SUCCESS" ] && [ "$FIREWALL_STATUS" = "SUCCESS" ] && [ "$SERVICES_STATUS" = "SUCCESS" ]; then
    echo ""
    echo -e "${GREEN}üéâ TH√ÄNH C√îNG! WEBSITE C√ì TH·ªÇ TRUY C·∫¨P T·ª™ B√äN NGO√ÄI!${NC}"
    echo ""
    echo "‚úÖ Ho·∫°t ƒë·ªông: https://$DOMAIN/"
    echo "‚úÖ C√≥ th·ªÉ truy c·∫≠p t·ª´ m√°y b√™n ngo√†i"
    echo "‚úÖ SSL/HTTPS b·∫£o m·∫≠t"
    echo ""
    
    if [ "$HTTP_STATUS" = "FAILED" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  HTTP c·∫ßn s·ª≠a nh·ªè (kh√¥ng ·∫£nh h∆∞·ªüng ch·ª©c nƒÉng ch√≠nh)${NC}"
        echo "   Ch·∫°y: ./fix_http_404.sh"
    fi
    
    echo ""
    echo "üåê TEST T·ª™ M√ÅY B√äN NGO√ÄI:"
    echo "1. Browser: https://$DOMAIN/"
    echo "2. Command: curl -I https://$DOMAIN/"
    echo "3. Ping: ping $EXTERNAL_IP"
    
else
    echo ""
    echo -e "${RED}‚ùå V·∫™N C√íN V·∫§N ƒê·ªÄ C·∫¶N KH·∫ÆC PH·ª§C${NC}"
    echo ""
    
    if [ "$HTTPS_STATUS" != "SUCCESS" ]; then
        echo "‚ùå HTTPS kh√¥ng ho·∫°t ƒë·ªông - c·∫ßn ki·ªÉm tra services"
        echo "   Ch·∫°y: ./QUICK_FIX_502.sh"
    fi
    
    if [ "$FIREWALL_STATUS" != "SUCCESS" ]; then
        echo "‚ùå Firewall ch·∫∑n ports - c·∫ßn m·ªü ports"
        echo "   Ch·∫°y: ./fix_external_access.sh"
    fi
    
    if [ "$SERVICES_STATUS" != "SUCCESS" ]; then
        echo "‚ùå Services kh√¥ng ch·∫°y - c·∫ßn kh·ªüi ƒë·ªông l·∫°i"
        echo "   Ch·∫°y: ./QUICK_FIX_502.sh"
    fi
fi

echo ""
echo "üìã SCRIPTS C√ì S·∫¥N:"
echo "=================="
echo "./fix_external_access.sh      - Kh·∫Øc ph·ª•c firewall"
echo "./fix_http_404.sh             - S·ª≠a HTTP redirect"  
echo "./test_external_access.sh     - Test t·ª´ m√°y b√™n ngo√†i"
echo "./QUICK_FIX_502.sh            - Kh·ªüi ƒë·ªông l·∫°i services"
echo ""

echo "üí° G·ª¢I √ù:"
echo "========="
if [ "$HTTPS_STATUS" = "SUCCESS" ]; then
    echo "‚úÖ Website ƒê√É HO·∫†T ƒê·ªòNG qua HTTPS t·ª´ m√°y b√™n ngo√†i!"
    echo "üéØ H√£y test https://$DOMAIN/ t·ª´ browser m√°y kh√°c"
else
    echo "‚ö†Ô∏è  C·∫ßn ch·∫°y c√°c scripts kh·∫Øc ph·ª•c ·ªü tr√™n"
fi 