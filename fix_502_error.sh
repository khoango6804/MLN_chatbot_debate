#!/bin/bash

echo "üîß Kh·∫Øc ph·ª•c l·ªói 502 Bad Gateway..."

# 1. Kill c√°c process c≈©
echo "üõë D·ª´ng c√°c process c≈©..."
sudo pkill -f "python3 main.py" 2>/dev/null
sudo pkill -f "node" 2>/dev/null
sudo pkill -f "npm" 2>/dev/null
sleep 2

# 2. Kh·ªüi ƒë·ªông Backend (ƒë√∫ng c√°ch v·ªõi uvicorn)
echo "üöÄ Kh·ªüi ƒë·ªông Backend API..."
cd /home/ubuntu/MLN_chatbot_debate/backend

# Ki·ªÉm tra file .env
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è  C·∫£nh b√°o: File .env kh√¥ng t·ªìn t·∫°i trong backend/"
    echo "T·∫°o file .env m·∫´u..."
    cat > .env << 'EOF'
# Th√™m c√°c API keys c·ªßa b·∫°n v√†o ƒë√¢y
GOOGLE_API_KEY=your_google_api_key_here
# Th√™m c√°c config kh√°c n·∫øu c·∫ßn
EOF
    echo "‚úÖ ƒê√£ t·∫°o file .env m·∫´u. Vui l√≤ng c·∫≠p nh·∫≠t API keys!"
fi

# Ch·∫°y backend v·ªõi uvicorn (ƒë√∫ng c√°ch)
echo "üîß Kh·ªüi ƒë·ªông v·ªõi uvicorn..."
nohup uvicorn main:app --host 0.0.0.0 --port 5000 --reload > backend_uvicorn_$(date +%Y%m%d_%H%M%S).log 2>&1 &
BACKEND_PID=$!
echo "Backend PID: $BACKEND_PID"
sleep 8

# 3. Ki·ªÉm tra Backend
echo "üß™ Ki·ªÉm tra Backend..."
for i in {1..6}; do
    if curl -s -f http://localhost:5000/api/admin/sessions > /dev/null 2>&1; then
        echo "‚úÖ Backend ƒëang ch·∫°y OK"
        break
    else
        echo "   Th·ª≠ l·∫ßn $i/6..."
        sleep 3
    fi
    if [ $i -eq 6 ]; then
        echo "‚ùå Backend ch∆∞a s·∫µn s√†ng. Ki·ªÉm tra log:"
        tail -20 backend_uvicorn_*.log
    fi
done

# 4. Kh·ªüi ƒë·ªông Frontend
echo "üé® Kh·ªüi ƒë·ªông Frontend React..."
cd /home/ubuntu/MLN_chatbot_debate/frontend

# Ki·ªÉm tra node_modules
if [ ! -d "node_modules" ]; then
    echo "üì¶ C√†i ƒë·∫∑t dependencies..."
    npm install
fi

# Ch·∫°y frontend
export NODE_OPTIONS="--max-old-space-size=4096"
export PORT=3001
nohup npm start > frontend_log_$(date +%Y%m%d_%H%M%S).log 2>&1 &
FRONTEND_PID=$!
echo "Frontend PID: $FRONTEND_PID"

# 5. Kh·ªüi ƒë·ªông l·∫°i Nginx
echo "üîÑ Kh·ªüi ƒë·ªông l·∫°i Nginx..."
sudo systemctl restart nginx
sleep 2

# 6. Ki·ªÉm tra t·ªïng th·ªÉ
echo ""
echo "üìä KI·ªÇM TRA TR·∫†NG TH√ÅI:"
echo "========================"

# Check ports
echo "üîç Ki·ªÉm tra ports:"
sudo lsof -i :5000 > /dev/null 2>&1 && echo "‚úÖ Port 5000 (Backend): OK" || echo "‚ùå Port 5000 (Backend): KH√îNG HO·∫†T ƒê·ªòNG"
sudo lsof -i :3001 > /dev/null 2>&1 && echo "‚úÖ Port 3001 (Frontend): OK" || echo "‚ùå Port 3001 (Frontend): KH√îNG HO·∫†T ƒê·ªòNG"

# Check nginx
if sudo systemctl is-active --quiet nginx; then
    echo "‚úÖ Nginx: ƒêang ch·∫°y"
else
    echo "‚ùå Nginx: Kh√¥ng ch·∫°y"
fi

# Test website
echo ""
echo "üåê Ki·ªÉm tra website..."
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://mlndebate.io.vn/api/admin/sessions 2>/dev/null)
if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "405" ]; then
    echo "‚úÖ Website ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng (HTTP $HTTP_CODE)"
elif [ "$HTTP_CODE" = "502" ]; then
    echo "‚ö†Ô∏è  V·∫´n c√≤n l·ªói 502. Frontend/Backend c√≥ th·ªÉ ƒëang kh·ªüi ƒë·ªông..."
    echo "   Vui l√≤ng ƒë·ª£i 30-60 gi√¢y v√† th·ª≠ l·∫°i"
else
    echo "‚ùå L·ªói HTTP: $HTTP_CODE"
fi

echo ""
echo "üí° G·ª¢I √ù:"
echo "- N·∫øu Backend kh√¥ng ch·∫°y: Ki·ªÉm tra file .env v√† c√°c API keys"
echo "- N·∫øu Frontend kh√¥ng ch·∫°y: ƒê·ª£i npm install ho√†n t·∫•t (c√≥ th·ªÉ m·∫•t v√†i ph√∫t)"
echo "- Logs ƒë∆∞·ª£c l∆∞u t·∫°i:"
echo "  - Backend: /home/ubuntu/MLN_chatbot_debate/backend/backend_uvicorn_*.log"
echo "  - Frontend: /home/ubuntu/MLN_chatbot_debate/frontend/frontend_log_*.log"
echo "  - Nginx: /var/log/nginx/mlndebate_error.log"
echo ""
echo "üîß L·ªÜNH KI·ªÇM TRA NHANH:"
echo "  - Xem backend log: tail -f /home/ubuntu/MLN_chatbot_debate/backend/backend_uvicorn_*.log"
echo "  - Test API: curl http://localhost:5000/api/admin/sessions"
echo "  - Test website: curl -I https://mlndebate.io.vn" 